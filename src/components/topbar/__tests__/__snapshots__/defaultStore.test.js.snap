// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DefaultStore /> should not render if stores are empty 1`] = `
<DefaultStore
  setDefaultStore={[Function]}
  stores={Array []}
/>
`;

exports[`<DefaultStore /> should render properly 1`] = `
<DefaultStore
  setDefaultStore={[Function]}
  stores={
    Array [
      Object {
        "id": "myid",
        "key": "store-key",
      },
      Object {
        "id": "myid2",
        "key": "store-key2",
      },
      Object {
        "id": "myid3",
        "key": "store-key3",
      },
    ]
  }
>
  <CustomComponent
    className="default-store"
    onSelect={[Function]}
  >
    <FormItem
      validateStatus="success"
    >
      <FormItem
        colon={true}
        hasFeedback={false}
        labelCol={
          Object {
            "sm": Object {
              "span": 4,
            },
            "xs": Object {
              "span": 24,
            },
          }
        }
        prefixCls="ant-form"
        validateStatus="success"
        wrapperCol={
          Object {
            "sm": Object {
              "span": 6,
            },
            "xs": Object {
              "span": 24,
            },
          }
        }
      >
        <Row
          className="ant-form-item"
          gutter={0}
        >
          <div
            className="ant-row ant-form-item"
          >
            <Col
              className="ant-form-item-control-wrapper"
              key=".$wrapper"
              sm={
                Object {
                  "span": 6,
                }
              }
              xs={
                Object {
                  "span": 24,
                }
              }
            >
              <div
                className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-6"
              >
                <div
                  className="ant-form-item-control has-success"
                >
                  <span
                    className="ant-form-item-children"
                  >
                    <SelectComponent
                      className="default-store"
                      onSelect={[Function]}
                    >
                      <Select
                        choiceTransitionName="zoom"
                        className="default-store"
                        filterOption={[Function]}
                        onSelect={[Function]}
                        prefixCls="ant-select"
                        showSearch={false}
                        transitionName="slide-up"
                      >
                        <LocaleReceiver
                          componentName="Select"
                          defaultLocale={
                            Object {
                              "notFoundContent": "Not Found",
                            }
                          }
                        >
                          <Select
                            allowClear={false}
                            autoClearSearchValue={true}
                            backfill={false}
                            choiceTransitionName="zoom"
                            className="default-store"
                            combobox={false}
                            defaultActiveFirstOption={true}
                            defaultOpen={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownStyle={Object {}}
                            filterOption={[Function]}
                            labelInValue={false}
                            multiple={false}
                            notFoundContent="Not Found"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDeselect={[Function]}
                            onFocus={[Function]}
                            onInputKeyDown={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionFilterProp="value"
                            optionLabelProp="children"
                            placeholder=""
                            prefixCls="ant-select"
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showArrow={true}
                            showSearch={false}
                            tags={false}
                            tokenSeparators={Array []}
                            transitionName="slide-up"
                          >
                            <SelectTrigger
                              combobox={false}
                              defaultActiveFirstOption={true}
                              dropdownMatchSelectWidth={true}
                              dropdownMenuStyle={Object {}}
                              dropdownStyle={Object {}}
                              inputValue=""
                              multiple={false}
                              onDropdownVisibleChange={[Function]}
                              onMenuDeselect={[Function]}
                              onMenuSelect={[Function]}
                              onPopupFocus={[Function]}
                              options={Array []}
                              prefixCls="ant-select"
                              showAction={
                                Array [
                                  "click",
                                ]
                              }
                              showSearch={false}
                              transitionName="slide-up"
                              value={Array []}
                              visible={false}
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                  }
                                }
                                combobox={false}
                                defaultActiveFirstOption={true}
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownStyle={Object {}}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                hideAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                inputValue=""
                                mask={false}
                                maskClosable={true}
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                multiple={false}
                                onDropdownVisibleChange={[Function]}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                options={Array []}
                                popup={
                                  <DropdownMenu
                                    backfillValue={undefined}
                                    defaultActiveFirstOption={true}
                                    dropdownMenuStyle={Object {}}
                                    firstActiveValue={undefined}
                                    inputValue=""
                                    menuItems={Array []}
                                    multiple={false}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupFocus={[Function]}
                                    onPopupScroll={undefined}
                                    prefixCls="ant-select-dropdown"
                                    value={Array []}
                                    visible={false}
                                  />
                                }
                                popupAlign={Object {}}
                                popupClassName="ant-select-dropdown--single"
                                popupPlacement="bottomLeft"
                                popupStyle={Object {}}
                                popupTransitionName="slide-up"
                                popupVisible={false}
                                prefixCls="ant-select-dropdown"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showSearch={false}
                                transitionName="slide-up"
                                value={Array []}
                                visible={false}
                              >
                                <div
                                  className="default-store ant-select ant-select-enabled"
                                  key="trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <div
                                    aria-autocomplete="list"
                                    aria-expanded={false}
                                    aria-haspopup="true"
                                    className="ant-select-selection
                                              ant-select-selection--single"
                                    key="selection"
                                    onKeyDown={[Function]}
                                    role="combobox"
                                    tabIndex={0}
                                  >
                                    <div
                                      className="ant-select-selection__rendered"
                                    />
                                    <span
                                      className="ant-select-arrow"
                                      key="arrow"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "WebkitUserSelect": "none",
                                          "userSelect": "none",
                                        }
                                      }
                                      unselectable="on"
                                    >
                                      <b />
                                    </span>
                                  </div>
                                </div>
                              </Trigger>
                            </SelectTrigger>
                          </Select>
                        </LocaleReceiver>
                      </Select>
                    </SelectComponent>
                  </span>
                  <Animate
                    animation={Object {}}
                    component=""
                    componentProps={Object {}}
                    key="help"
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="show-help"
                  />
                </div>
              </div>
            </Col>
          </div>
        </Row>
      </FormItem>
    </FormItem>
  </CustomComponent>
</DefaultStore>
`;
